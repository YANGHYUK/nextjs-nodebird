{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst initialState = {\n  user: {\n    isLoggedIn: false,\n    user: null,\n    signUpData: {},\n    loginData: {}\n  },\n  post: {\n    mainPosts: []\n  }\n};\n\nconst login = data => {\n  return {\n    type: \"LOG_IN\",\n    data\n  };\n}; //action creator\n\n\nconst changeNickname = data => {\n  return {\n    type: \"CHANGE_NICKNAME\",\n    data: \"boogiYang\"\n  };\n}; // changeNickname(\"boogiYang\");\n// (이전 상태 , 액션) => 다음 상태\n\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"LOGIN\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: true\n        })\n      });\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/wonki/coding/study/nextjs-nodebird/prepare/front/reducer/index.js"],"names":["initialState","user","isLoggedIn","signUpData","loginData","post","mainPosts","login","data","type","changeNickname","rootReducer","state","action"],"mappings":";;;;;;AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAE,KADR;AAEJD,IAAAA,IAAI,EAAE,IAFF;AAGJE,IAAAA,UAAU,EAAE,EAHR;AAIJC,IAAAA,SAAS,EAAE;AAJP,GADa;AAOnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE;AADP;AAPa,CAArB;;AAYA,MAAMC,KAAK,GAAIC,IAAD,IAAU;AACtB,SAAO;AACLC,IAAAA,IAAI,EAAE,QADD;AAELD,IAAAA;AAFK,GAAP;AAID,CALD,C,CAOA;;;AACA,MAAME,cAAc,GAAIF,IAAD,IAAU;AAC/B,SAAO;AAAEC,IAAAA,IAAI,EAAE,iBAAR;AAA2BD,IAAAA,IAAI,EAAE;AAAjC,GAAP;AACD,CAFD,C,CAIA;AAEA;;;AACA,MAAMG,WAAW,GAAG,CAACC,KAAK,GAAGZ,YAAT,EAAuBa,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACJ,IAAf;AACE,SAAK,OAAL;AACE,6CACKG,KADL;AAEEX,QAAAA,IAAI,kCACCW,KAAK,CAACX,IADP;AAEFC,UAAAA,UAAU,EAAE;AAFV;AAFN;AAFJ;AAUD,CAXD;;AAaA,eAAeS,WAAf","sourcesContent":["const initialState = {\n  user: {\n    isLoggedIn: false,\n    user: null,\n    signUpData: {},\n    loginData: {},\n  },\n  post: {\n    mainPosts: [],\n  },\n};\n\nconst login = (data) => {\n  return {\n    type: \"LOG_IN\",\n    data,\n  };\n};\n\n//action creator\nconst changeNickname = (data) => {\n  return { type: \"CHANGE_NICKNAME\", data: \"boogiYang\" };\n};\n\n// changeNickname(\"boogiYang\");\n\n// (이전 상태 , 액션) => 다음 상태\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"LOGIN\":\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          isLoggedIn: true,\n        },\n      };\n  }\n};\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}