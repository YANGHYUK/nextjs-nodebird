{"ast":null,"code":"var _jsxFileName = \"/Users/wonki/coding/study/nextjs-nodebird/prepare/front/components/PostForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useMemo, useRef } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addPost } from \"../reducers/post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths;\n\n  var dispatch = useDispatch();\n  var formStyle = useMemo(function () {\n    return {\n      margin: \"10px 0 20px\"\n    };\n  }, []);\n  var submitButtonStyle = useMemo(function () {\n    return {\n      \"float\": \"right\"\n    };\n  }, []);\n\n  var _useState = useState(\"\"),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var onChangeText = useCallback(function (e) {\n    var value = e.target.value;\n    setText(value);\n  });\n  var onSubmit = useCallback(function () {\n    dispatch(addPost);\n    setText(\"\");\n  }, []);\n  var imageInput = useRef(null);\n  var onClickImageUpload = useCallback(function () {\n    imageInput === null || imageInput === void 0 ? void 0 : imageInput.current.click();\n  }, [imageInput === null || imageInput === void 0 ? void 0 : imageInput.current]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: formStyle,\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"fileButton\",\n        type: \"file\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        htmlFor: \"fileButton\",\n        onClick: onClickImageUpload,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: submitButtonStyle,\n        htmlType: \"submit\",\n        children: \"\\uC9F9\\uC9F9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: imagePaths.map(function (v) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"inline-block\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: v,\n              style: {\n                width: \"200px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                children: \"\\uC81C\\uAC70\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, _this)]\n          }, v, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PostForm, \"nToXotf8ISWeBRXy+MrO0ZYTSZw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["/Users/wonki/coding/study/nextjs-nodebird/prepare/front/components/PostForm.js"],"names":["React","useState","useCallback","useMemo","useRef","Form","Input","Button","useSelector","useDispatch","addPost","PostForm","state","post","imagePaths","dispatch","formStyle","margin","submitButtonStyle","text","setText","onChangeText","e","value","target","onSubmit","imageInput","onClickImageUpload","current","click","map","v","display","width"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useMemo, useRef } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addPost } from \"../reducers/post\";\nconst PostForm = () => {\n  const { imagePaths } = useSelector((state) => state.post);\n  const dispatch = useDispatch();\n  const formStyle = useMemo(() => {\n    return { margin: \"10px 0 20px\" };\n  }, []);\n  const submitButtonStyle = useMemo(() => {\n    return { float: \"right\" };\n  }, []);\n  const [text, setText] = useState(\"\");\n  const onChangeText = useCallback((e) => {\n    const value = e.target.value;\n    setText(value);\n  });\n  const onSubmit = useCallback(() => {\n    dispatch(addPost);\n    setText(\"\");\n  }, []);\n\n  const imageInput = useRef(null);\n\n  const onClickImageUpload = useCallback(() => {\n    imageInput?.current.click();\n  }, [imageInput?.current]);\n  return (\n    <Form style={formStyle} encType=\"multipart/form-data\" onFinish={onSubmit}>\n      <Input.TextArea\n        value={text}\n        onChange={onChangeText}\n        maxLength={140}\n        placeholder=\"어떤 신기한 일이 있었나요?\"\n      />\n      <div>\n        <input id=\"fileButton\" type=\"file\" multiple hidden ref={imageInput} />\n        <Button htmlFor=\"fileButton\" onClick={onClickImageUpload}>\n          이미지 업로드\n        </Button>\n        <Button type=\"primary\" style={submitButtonStyle} htmlType=\"submit\">\n          짹짹\n        </Button>\n        <div>\n          {imagePaths.map((v) => {\n            return (\n              <div key={v} style={{ display: \"inline-block\" }}>\n                <img src={v} style={{ width: \"200px\" }} />\n                <div>\n                  <Button>제거</Button>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </Form>\n  );\n};\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}